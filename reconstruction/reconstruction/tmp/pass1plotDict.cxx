//
// File generated by rootcint at Wed Sep  6 14:38:57 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dInetdIminusdIhomedIgrishadItadIsdanalysisdIpass1plotdItmpdIpass1plotDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "pass1plotDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void md_pcgf_class_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_md_pcgf_class(void *p = 0);
   static void *newArray_md_pcgf_class(Long_t size, void *p);
   static void delete_md_pcgf_class(void *p);
   static void deleteArray_md_pcgf_class(void *p);
   static void destruct_md_pcgf_class(void *p);
   static void streamer_md_pcgf_class(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::md_pcgf_class*)
   {
      ::md_pcgf_class *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::md_pcgf_class >(0);
      static ::ROOT::TGenericClassInfo 
         instance("md_pcgf_class", ::md_pcgf_class::Class_Version(), "/net/minus/home/grisha/ta/sdanalysis/pass1plot/inc/pass1plot.h", 35,
                  typeid(::md_pcgf_class), DefineBehavior(ptr, ptr),
                  &::md_pcgf_class::Dictionary, isa_proxy, 0,
                  sizeof(::md_pcgf_class) );
      instance.SetNew(&new_md_pcgf_class);
      instance.SetNewArray(&newArray_md_pcgf_class);
      instance.SetDelete(&delete_md_pcgf_class);
      instance.SetDeleteArray(&deleteArray_md_pcgf_class);
      instance.SetDestructor(&destruct_md_pcgf_class);
      instance.SetStreamerFunc(&streamer_md_pcgf_class);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::md_pcgf_class*)
   {
      return GenerateInitInstanceLocal((::md_pcgf_class*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::md_pcgf_class*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pass1plot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_pass1plot(void *p);
   static void deleteArray_pass1plot(void *p);
   static void destruct_pass1plot(void *p);
   static void streamer_pass1plot(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::pass1plot*)
   {
      ::pass1plot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::pass1plot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("pass1plot", ::pass1plot::Class_Version(), "/net/minus/home/grisha/ta/sdanalysis/pass1plot/inc/pass1plot.h", 61,
                  typeid(::pass1plot), DefineBehavior(ptr, ptr),
                  &::pass1plot::Dictionary, isa_proxy, 0,
                  sizeof(::pass1plot) );
      instance.SetDelete(&delete_pass1plot);
      instance.SetDeleteArray(&deleteArray_pass1plot);
      instance.SetDestructor(&destruct_pass1plot);
      instance.SetStreamerFunc(&streamer_pass1plot);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::pass1plot*)
   {
      return GenerateInitInstanceLocal((::pass1plot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::pass1plot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *md_pcgf_class::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *md_pcgf_class::Class_Name()
{
   return "md_pcgf_class";
}

//______________________________________________________________________________
const char *md_pcgf_class::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::md_pcgf_class*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int md_pcgf_class::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::md_pcgf_class*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void md_pcgf_class::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::md_pcgf_class*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *md_pcgf_class::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::md_pcgf_class*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *pass1plot::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *pass1plot::Class_Name()
{
   return "pass1plot";
}

//______________________________________________________________________________
const char *pass1plot::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::pass1plot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int pass1plot::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::pass1plot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void pass1plot::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::pass1plot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *pass1plot::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::pass1plot*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void pass1plot::Streamer(TBuffer &R__b)
{
   // Stream an object of class pass1plot.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      event_time_stamp.Streamer(R__b);
      R__b >> const_cast<  double &>( MD_PMT_QE );
      R__b >> pass1tree;
      R__b >> talex00;
      R__b >> have_talex00;
      R__b >> rusdraw;
      R__b >> have_rusdraw;
      R__b >> bsdinfo;
      R__b >> have_bsdinfo;
      R__b >> tasdcalibev;
      R__b >> have_tasdcalibev;
      R__b >> sdtrgbk;
      R__b >> have_sdtrgbk;
      R__b >> rusdmc;
      R__b >> have_rusdmc;
      R__b >> rusdmc1;
      R__b >> have_rusdmc1;
      R__b >> rufptn;
      R__b >> have_rufptn;
      R__b >> rusdgeom;
      R__b >> have_rusdgeom;
      R__b >> rufldf;
      R__b >> have_rufldf;
      R__b >> fdplane;
      R__b >> brplane;
      R__b >> have_brplane;
      R__b >> lrplane;
      R__b >> have_lrplane;
      R__b >> fdprofile;
      R__b >> brprofile;
      R__b >> have_brprofile;
      R__b >> lrprofile;
      R__b >> have_lrprofile;
      R__b >> hraw1;
      R__b >> have_hraw1;
      R__b >> mcraw;
      R__b >> have_mcraw;
      R__b >> mc04;
      R__b >> have_mc04;
      R__b >> hbar;
      R__b >> have_hbar;
      R__b >> stps2;
      R__b >> have_stps2;
      R__b >> stpln;
      R__b >> have_stpln;
      R__b >> hctim;
      R__b >> have_hctim;
      R__b >> hcbin;
      R__b >> have_hcbin;
      R__b >> prfc;
      R__b >> have_prfc;
      R__b >> haveMC;
      R__b.ReadStaticArray((bool*)have_fdplane);
      R__b.ReadStaticArray((bool*)have_fdprofile);
      R__b >> md_pcgf;
      R__b >> eventsRead;
      R__b >> ngclust;
      R__b.ReadStaticArray((int*)gclust);
      R__b.ReadStaticArray((int*)laxisgclust);
      R__b.ReadStaticArray((int*)saxisgclust);
      R__b.ReadStaticArray((double*)relTime);
      R__b.ReadStaticArray((double*)timeErr);
      R__b.ReadStaticArray((double*)charge);
      R__b.ReadStaticArray((double*)chargeErr);
      R__b.ReadStaticArray((double*)tEarliest);
      R__b.ReadStaticArray((double*)lcharge);
      R__b.ReadStaticArray((double*)qtot);
      R__b >> ngaps_plot;
      R__b >> nfadcb;
      {
         vector<Double_t> &R__stl =  gapsize_plot;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      int R__i;
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> hErelTime[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> hCharge[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hVEM[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hPed[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hFadcPed[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hfadc[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> hPhi[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> hTheta[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> hParea[R__i];
      R__b >> hCoreDiffX;
      R__b >> hCoreDiffY;
      R__b >> hCoreDiffR;
      R__b >> hDcoreR2vsRmin;
      R__b >> pDcoreR2vsRmin;
      R__b >> hDcoreRnoSat;
      R__b >> hDcoreRnoSatVsR;
      R__b >> pDcoreRnoSatVsR;
      R__b >> hTdSat;
      R__b >> hTsSat;
      R__b >> hTrSat;
      R__b >> hNremVsRmin;
      R__b >> pNremVsRmin;
      R__b >> hDcoreR2vsOneOverQmin;
      R__b >> pDcoreR2vsOneOverQmin;
      R__b >> hNremVsOneOverQmin;
      R__b >> pNremVsOneOverQmin;
      R__b >> hTdiff1;
      R__b >> hQVsdT;
      R__b >> hdQVsdT;
      R__b >> hQrVsdT;
      R__b >> hTdiff2VsR;
      R__b >> hTdiff3VsR;
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gTvsUall[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gTvsUsclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gTvsUclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gTvsVall[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gTvsVsclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gTvsVclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gQvsSall[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gQvsSsclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gQvsSclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gTvsRall[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gTvsRsclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> gTvsRclust[R__i];
      R__b >> hQscat;
      R__b >> pQscat;
      R__b >> hQupQloRat;
      R__b >> hQupQloRatScat;
      R__b >> pQupQloRatScat;
      R__b >> hTscat;
      R__b >> pTscat;
      R__b >> hNfold;
      R__b >> hQrat;
      R__b >> hLargePheight;
      R__b >> h1MIPResp;
      R__b.ReadStaticArray((double*)muresp_shape);
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hNpart[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hNfadc[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hResp[R__i];
      R__b >> sNpart;
      R__b.ReadStaticArray((bool*)isKosher);
      R__b >> f;
      R__b.ReadStaticArray((int*)rusdraw2tasdcalibev);
      {
         vector<dstbank_class**> &R__stl =  dst_branches;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(dstbank_class));
         if (R__tcl1==0) {
            Error("dst_branches streamer","Missing the TClass object for dstbank_class!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            dstbank_class** R__t;
            R__t = (dstbank_class**)R__b.ReadObjectAny(R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TString> &R__stl =  tree_names;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TString R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, pass1plot::IsA());
   } else {
      R__c = R__b.WriteVersion(pass1plot::IsA(), kTRUE);
      event_time_stamp.Streamer(R__b);
      R__b << const_cast<  double &>( MD_PMT_QE );
      R__b << pass1tree;
      R__b << talex00;
      R__b << have_talex00;
      R__b << rusdraw;
      R__b << have_rusdraw;
      R__b << bsdinfo;
      R__b << have_bsdinfo;
      R__b << tasdcalibev;
      R__b << have_tasdcalibev;
      R__b << sdtrgbk;
      R__b << have_sdtrgbk;
      R__b << rusdmc;
      R__b << have_rusdmc;
      R__b << rusdmc1;
      R__b << have_rusdmc1;
      R__b << rufptn;
      R__b << have_rufptn;
      R__b << rusdgeom;
      R__b << have_rusdgeom;
      R__b << rufldf;
      R__b << have_rufldf;
      R__b << fdplane;
      R__b << brplane;
      R__b << have_brplane;
      R__b << lrplane;
      R__b << have_lrplane;
      R__b << fdprofile;
      R__b << brprofile;
      R__b << have_brprofile;
      R__b << lrprofile;
      R__b << have_lrprofile;
      R__b << hraw1;
      R__b << have_hraw1;
      R__b << mcraw;
      R__b << have_mcraw;
      R__b << mc04;
      R__b << have_mc04;
      R__b << hbar;
      R__b << have_hbar;
      R__b << stps2;
      R__b << have_stps2;
      R__b << stpln;
      R__b << have_stpln;
      R__b << hctim;
      R__b << have_hctim;
      R__b << hcbin;
      R__b << have_hcbin;
      R__b << prfc;
      R__b << have_prfc;
      R__b << haveMC;
      R__b.WriteArray(have_fdplane, 2);
      R__b.WriteArray(have_fdprofile, 2);
      R__b << md_pcgf;
      R__b << eventsRead;
      R__b << ngclust;
      R__b.WriteArray((int*)gclust, 3072);
      R__b.WriteArray((int*)laxisgclust, 3072);
      R__b.WriteArray((int*)saxisgclust, 3072);
      R__b.WriteArray((double*)relTime, 3072);
      R__b.WriteArray((double*)timeErr, 3072);
      R__b.WriteArray((double*)charge, 3072);
      R__b.WriteArray((double*)chargeErr, 3072);
      R__b.WriteArray(tEarliest, 3);
      R__b.WriteArray(lcharge, 3);
      R__b.WriteArray(qtot, 3);
      R__b << ngaps_plot;
      R__b << nfadcb;
      {
         vector<Double_t> &R__stl =  gapsize_plot;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      int R__i;
      for (R__i = 0; R__i < 3; R__i++)
         R__b << (TObject*)hErelTime[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << (TObject*)hCharge[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hVEM[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hPed[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hFadcPed[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hfadc[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << (TObject*)hPhi[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << (TObject*)hTheta[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << (TObject*)hParea[R__i];
      R__b << (TObject*)hCoreDiffX;
      R__b << (TObject*)hCoreDiffY;
      R__b << (TObject*)hCoreDiffR;
      R__b << (TObject*)hDcoreR2vsRmin;
      R__b << (TObject*)pDcoreR2vsRmin;
      R__b << (TObject*)hDcoreRnoSat;
      R__b << (TObject*)hDcoreRnoSatVsR;
      R__b << (TObject*)pDcoreRnoSatVsR;
      R__b << (TObject*)hTdSat;
      R__b << (TObject*)hTsSat;
      R__b << (TObject*)hTrSat;
      R__b << (TObject*)hNremVsRmin;
      R__b << (TObject*)pNremVsRmin;
      R__b << (TObject*)hDcoreR2vsOneOverQmin;
      R__b << (TObject*)pDcoreR2vsOneOverQmin;
      R__b << (TObject*)hNremVsOneOverQmin;
      R__b << (TObject*)pNremVsOneOverQmin;
      R__b << (TObject*)hTdiff1;
      R__b << (TObject*)hQVsdT;
      R__b << (TObject*)hdQVsdT;
      R__b << (TObject*)hQrVsdT;
      R__b << (TObject*)hTdiff2VsR;
      R__b << (TObject*)hTdiff3VsR;
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gTvsUall[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gTvsUsclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gTvsUclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gTvsVall[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gTvsVsclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gTvsVclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gQvsSall[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gQvsSsclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gQvsSclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gTvsRall[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gTvsRsclust[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << gTvsRclust[R__i];
      R__b << (TObject*)hQscat;
      R__b << (TObject*)pQscat;
      R__b << (TObject*)hQupQloRat;
      R__b << (TObject*)hQupQloRatScat;
      R__b << (TObject*)pQupQloRatScat;
      R__b << (TObject*)hTscat;
      R__b << (TObject*)pTscat;
      R__b << (TObject*)hNfold;
      R__b << (TObject*)hQrat;
      R__b << (TObject*)hLargePheight;
      R__b << (TObject*)h1MIPResp;
      R__b.WriteArray(muresp_shape, 12);
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hNpart[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hNfadc[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hResp[R__i];
      R__b << sNpart;
      R__b.WriteArray(isKosher, 3);
      R__b << f;
      R__b.WriteArray(rusdraw2tasdcalibev, 1024);
      {
         vector<dstbank_class**> &R__stl =  dst_branches;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<dstbank_class**>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<TString> &R__stl =  tree_names;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TString>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TString&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void pass1plot::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class pass1plot.
      TClass *R__cl = ::pass1plot::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_time_stamp", &event_time_stamp);
      R__insp.InspectMember(event_time_stamp, "event_time_stamp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MD_PMT_QE", &MD_PMT_QE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pass1tree", &pass1tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*talex00", &talex00);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_talex00", &have_talex00);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rusdraw", &rusdraw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_rusdraw", &have_rusdraw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*bsdinfo", &bsdinfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_bsdinfo", &have_bsdinfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tasdcalibev", &tasdcalibev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_tasdcalibev", &have_tasdcalibev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sdtrgbk", &sdtrgbk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_sdtrgbk", &have_sdtrgbk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rusdmc", &rusdmc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_rusdmc", &have_rusdmc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rusdmc1", &rusdmc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_rusdmc1", &have_rusdmc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rufptn", &rufptn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_rufptn", &have_rufptn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rusdgeom", &rusdgeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_rusdgeom", &have_rusdgeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rufldf", &rufldf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_rufldf", &have_rufldf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdplane", &fdplane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*brplane", &brplane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_brplane", &have_brplane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lrplane", &lrplane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_lrplane", &have_lrplane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdprofile", &fdprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*brprofile", &brprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_brprofile", &have_brprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lrprofile", &lrprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_lrprofile", &have_lrprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hraw1", &hraw1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_hraw1", &have_hraw1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mcraw", &mcraw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_mcraw", &have_mcraw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mc04", &mc04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_mc04", &have_mc04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hbar", &hbar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_hbar", &have_hbar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stps2", &stps2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_stps2", &have_stps2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stpln", &stpln);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_stpln", &have_stpln);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hctim", &hctim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_hctim", &have_hctim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hcbin", &hcbin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_hcbin", &have_hcbin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*prfc", &prfc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_prfc", &have_prfc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "haveMC", &haveMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_fdplane[2]", have_fdplane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "have_fdprofile[2]", have_fdprofile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*md_pcgf", &md_pcgf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventsRead", &eventsRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ngclust", &ngclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gclust[1024][3]", gclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "laxisgclust[1024][3]", laxisgclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "saxisgclust[1024][3]", saxisgclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "relTime[1024][3]", relTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeErr[1024][3]", timeErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge[1024][3]", charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargeErr[1024][3]", chargeErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tEarliest[3]", tEarliest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lcharge[3]", lcharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qtot[3]", qtot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ngaps_plot", &ngaps_plot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nfadcb", &nfadcb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gapsize_plot", (void*)&gapsize_plot);
      R__insp.InspectMember("vector<Double_t>", (void*)&gapsize_plot, "gapsize_plot.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hErelTime[3]", &hErelTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCharge[3]", &hCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hVEM[2]", &hVEM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPed[2]", &hPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hFadcPed[2]", &hFadcPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hfadc[2]", &hfadc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPhi[3]", &hPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTheta[3]", &hTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hParea[3]", &hParea);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCoreDiffX", &hCoreDiffX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCoreDiffY", &hCoreDiffY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hCoreDiffR", &hCoreDiffR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcoreR2vsRmin", &hDcoreR2vsRmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pDcoreR2vsRmin", &pDcoreR2vsRmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcoreRnoSat", &hDcoreRnoSat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcoreRnoSatVsR", &hDcoreRnoSatVsR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pDcoreRnoSatVsR", &pDcoreRnoSatVsR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTdSat", &hTdSat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTsSat", &hTsSat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTrSat", &hTrSat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNremVsRmin", &hNremVsRmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pNremVsRmin", &pNremVsRmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hDcoreR2vsOneOverQmin", &hDcoreR2vsOneOverQmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pDcoreR2vsOneOverQmin", &pDcoreR2vsOneOverQmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNremVsOneOverQmin", &hNremVsOneOverQmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pNremVsOneOverQmin", &pNremVsOneOverQmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTdiff1", &hTdiff1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hQVsdT", &hQVsdT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdQVsdT", &hdQVsdT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hQrVsdT", &hQrVsdT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTdiff2VsR", &hTdiff2VsR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTdiff3VsR", &hTdiff3VsR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gTvsUall[3]", &gTvsUall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gTvsUsclust[3]", &gTvsUsclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gTvsUclust[3]", &gTvsUclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gTvsVall[3]", &gTvsVall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gTvsVsclust[3]", &gTvsVsclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gTvsVclust[3]", &gTvsVclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gQvsSall[3]", &gQvsSall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gQvsSsclust[3]", &gQvsSsclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gQvsSclust[3]", &gQvsSclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gTvsRall[3]", &gTvsRall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gTvsRsclust[3]", &gTvsRsclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gTvsRclust[3]", &gTvsRclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hQscat", &hQscat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pQscat", &pQscat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hQupQloRat", &hQupQloRat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hQupQloRatScat", &hQupQloRatScat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pQupQloRatScat", &pQupQloRatScat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hTscat", &hTscat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pTscat", &pTscat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNfold", &hNfold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hQrat", &hQrat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hLargePheight", &hLargePheight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h1MIPResp", &h1MIPResp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muresp_shape[12]", muresp_shape);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNpart[2]", &hNpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hNfadc[2]", &hNfadc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hResp[2]", &hResp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*sNpart", &sNpart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isKosher[3]", isKosher);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f", &f);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rusdraw2tasdcalibev[1024]", rusdraw2tasdcalibev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dst_branches", (void*)&dst_branches);
      R__insp.InspectMember("vector<dstbank_class**>", (void*)&dst_branches, "dst_branches.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tree_names", (void*)&tree_names);
      R__insp.InspectMember("vector<TString>", (void*)&tree_names, "tree_names.", false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_pass1plot(void *p) {
      delete ((::pass1plot*)p);
   }
   static void deleteArray_pass1plot(void *p) {
      delete [] ((::pass1plot*)p);
   }
   static void destruct_pass1plot(void *p) {
      typedef ::pass1plot current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_pass1plot(TBuffer &buf, void *obj) {
      ((::pass1plot*)obj)->::pass1plot::Streamer(buf);
   }
} // end of namespace ROOT for class ::pass1plot

//______________________________________________________________________________
void md_pcgf_class::Streamer(TBuffer &R__b)
{
   // Stream an object of class md_pcgf_class.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((int*)imin);
      R__b.ReadStaticArray((int*)igfit);
      R__b >> ig;
      R__b.ReadStaticArray((double*)avgcfc);
      R__b.ReadStaticArray((double*)ndft_fit);
      R__b >> tot_npe;
      R__b >> nbins;
      R__b >> ng;
      R__b >> sum;
      R__b >> FIT_START;
      R__b >> c2c;
      R__b >> c2p;
      R__b >> c2t;
      R__b >> ndfp;
      R__b >> ndft;
      R__b >> normp;
      R__b >> normt;
      R__b.CheckByteCount(R__s, R__c, md_pcgf_class::IsA());
   } else {
      R__c = R__b.WriteVersion(md_pcgf_class::IsA(), kTRUE);
      R__b.WriteArray(imin, 3);
      R__b.WriteArray(igfit, 16);
      R__b << ig;
      R__b.WriteArray(avgcfc, 16);
      R__b.WriteArray(ndft_fit, 16);
      R__b << tot_npe;
      R__b << nbins;
      R__b << ng;
      R__b << sum;
      R__b << FIT_START;
      R__b << c2c;
      R__b << c2p;
      R__b << c2t;
      R__b << ndfp;
      R__b << ndft;
      R__b << normp;
      R__b << normt;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void md_pcgf_class::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class md_pcgf_class.
      TClass *R__cl = ::md_pcgf_class::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "imin[3]", imin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "igfit[16]", igfit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ig", &ig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avgcfc[16]", avgcfc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndft_fit[16]", ndft_fit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tot_npe", &tot_npe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nbins", &nbins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ng", &ng);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sum", &sum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FIT_START", &FIT_START);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c2c", &c2c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c2p", &c2p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c2t", &c2t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndfp", &ndfp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndft", &ndft);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "normp", &normp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "normt", &normt);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_md_pcgf_class(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::md_pcgf_class : new ::md_pcgf_class;
   }
   static void *newArray_md_pcgf_class(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::md_pcgf_class[nElements] : new ::md_pcgf_class[nElements];
   }
   // Wrapper around operator delete
   static void delete_md_pcgf_class(void *p) {
      delete ((::md_pcgf_class*)p);
   }
   static void deleteArray_md_pcgf_class(void *p) {
      delete [] ((::md_pcgf_class*)p);
   }
   static void destruct_md_pcgf_class(void *p) {
      typedef ::md_pcgf_class current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_md_pcgf_class(TBuffer &buf, void *obj) {
      ((::md_pcgf_class*)obj)->::md_pcgf_class::Streamer(buf);
   }
} // end of namespace ROOT for class ::md_pcgf_class

namespace ROOT {
   void vectorlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETStringgR_Dictionary();
   static void *new_vectorlETStringgR(void *p = 0);
   static void *newArray_vectorlETStringgR(Long_t size, void *p);
   static void delete_vectorlETStringgR(void *p);
   static void deleteArray_vectorlETStringgR(void *p);
   static void destruct_vectorlETStringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TString>*)
   {
      vector<TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TString>", -2, "/opt/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TString>), DefineBehavior(ptr, ptr),
                  0, &vectorlETStringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TString>) );
      instance.SetNew(&new_vectorlETStringgR);
      instance.SetNewArray(&newArray_vectorlETStringgR);
      instance.SetDelete(&delete_vectorlETStringgR);
      instance.SetDeleteArray(&deleteArray_vectorlETStringgR);
      instance.SetDestructor(&destruct_vectorlETStringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETStringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TString>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString> : new vector<TString>;
   }
   static void *newArray_vectorlETStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString>[nElements] : new vector<TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETStringgR(void *p) {
      delete ((vector<TString>*)p);
   }
   static void deleteArray_vectorlETStringgR(void *p) {
      delete [] ((vector<TString>*)p);
   }
   static void destruct_vectorlETStringgR(void *p) {
      typedef vector<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TString>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEdstbank_classmUmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdstbank_classmUmUgR_Dictionary();
   static void *new_vectorlEdstbank_classmUmUgR(void *p = 0);
   static void *newArray_vectorlEdstbank_classmUmUgR(Long_t size, void *p);
   static void delete_vectorlEdstbank_classmUmUgR(void *p);
   static void deleteArray_vectorlEdstbank_classmUmUgR(void *p);
   static void destruct_vectorlEdstbank_classmUmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<dstbank_class**>*)
   {
      vector<dstbank_class**> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dstbank_class**>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dstbank_class**>", -2, "/opt/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<dstbank_class**>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdstbank_classmUmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dstbank_class**>) );
      instance.SetNew(&new_vectorlEdstbank_classmUmUgR);
      instance.SetNewArray(&newArray_vectorlEdstbank_classmUmUgR);
      instance.SetDelete(&delete_vectorlEdstbank_classmUmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdstbank_classmUmUgR);
      instance.SetDestructor(&destruct_vectorlEdstbank_classmUmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<dstbank_class**> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dstbank_class**>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdstbank_classmUmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<dstbank_class**>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdstbank_classmUmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dstbank_class**> : new vector<dstbank_class**>;
   }
   static void *newArray_vectorlEdstbank_classmUmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dstbank_class**>[nElements] : new vector<dstbank_class**>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdstbank_classmUmUgR(void *p) {
      delete ((vector<dstbank_class**>*)p);
   }
   static void deleteArray_vectorlEdstbank_classmUmUgR(void *p) {
      delete [] ((vector<dstbank_class**>*)p);
   }
   static void destruct_vectorlEdstbank_classmUmUgR(void *p) {
      typedef vector<dstbank_class**> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<dstbank_class**>

/********************************************************
* /net/minus/home/grisha/ta/sdanalysis/pass1plot/tmp/pass1plotDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablepass1plotDict();

extern "C" void G__set_cpp_environmentpass1plotDict() {
  G__cpp_reset_tagtablepass1plotDict();
}
#include <new>
extern "C" int G__cpp_dllrevpass1plotDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* md_pcgf_class */
static int G__pass1plotDict_861_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   md_pcgf_class* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new md_pcgf_class[n];
     } else {
       p = new((void*) gvp) md_pcgf_class[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new md_pcgf_class;
     } else {
       p = new((void*) gvp) md_pcgf_class;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pass1plotDictLN_md_pcgf_class));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) md_pcgf_class::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) md_pcgf_class::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) md_pcgf_class::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      md_pcgf_class::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const md_pcgf_class*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((md_pcgf_class*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((md_pcgf_class*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((md_pcgf_class*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) md_pcgf_class::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) md_pcgf_class::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) md_pcgf_class::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_861_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) md_pcgf_class::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__pass1plotDict_861_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   md_pcgf_class* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new md_pcgf_class(*(md_pcgf_class*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pass1plotDictLN_md_pcgf_class));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef md_pcgf_class G__Tmd_pcgf_class;
static int G__pass1plotDict_861_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (md_pcgf_class*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((md_pcgf_class*) (soff+(sizeof(md_pcgf_class)*i)))->~G__Tmd_pcgf_class();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (md_pcgf_class*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((md_pcgf_class*) (soff))->~G__Tmd_pcgf_class();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__pass1plotDict_861_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   md_pcgf_class* dest = (md_pcgf_class*) G__getstructoffset();
   *dest = *(md_pcgf_class*) libp->para[0].ref;
   const md_pcgf_class& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pass1plot */
static int G__pass1plotDict_862_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pass1plot* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pass1plot((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) pass1plot((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pass1plotDictLN_pass1plot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((pass1plot*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((pass1plot*) G__getstructoffset())->GetEntry((Long64_t) G__Longlong(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((pass1plot*) G__getstructoffset())->GetEntry());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((pass1plot*) G__getstructoffset())->GetEntries((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((pass1plot*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((pass1plot*) G__getstructoffset())->GetReadEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->set_event_time_stamp((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->set_event_time_stamp());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->event_hist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->get_sded_coordinates_from_gps((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Double_t*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->fadc_hist((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->fadc_hist());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->npart_hist((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->lookat((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->lookat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->findCluster((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->findCluster((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->findTrig((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->findTrig((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((pass1plot*) G__getstructoffset())->svalue((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->xycoor((int) G__int(libp->para[0]), (int*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((pass1plot*) G__getstructoffset())->get_sdenergy((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((pass1plot*) G__getstructoffset())->get_sdenergy_iron((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((pass1plot*) G__getstructoffset())->get_event_surroundedness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->have_stdin((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->have_stdin());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->continue_activity((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->continue_activity());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->set_fdplane((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->set_fdplane((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->set_fdplane((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->set_fdprofile((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->set_fdprofile((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->set_fdprofile((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->get_fd_tube_pd((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->get_fd_time((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int*) G__int(libp->para[3])
, (int*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->fdsite2clf((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->clf2fdsite((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->get_hraw1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->tryCoreCalc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->recalcCore((Double_t) G__double(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->recalcCore((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->calcNewCore((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (Int_t*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->histDcore();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->isSaturated((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->histSat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->inSclust((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->areSadjacent((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->chk_precog();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->init_hist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->init_varbnum_hist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->analyze_Mf_hits((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->histSignal();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((pass1plot*) G__getstructoffset())->get_tasdcalibev_iwf((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((pass1plot*) G__getstructoffset())->greg2jd((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->jd2greg((double) G__double(libp->para[0]), (int*) G__int(libp->para[1])
, (int*) G__int(libp->para[2]), (int*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((pass1plot*) G__getstructoffset())->time_in_sec_j2000((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((pass1plot*) G__getstructoffset())->get_sd_secfrac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((pass1plot*) G__getstructoffset())->get_yymmdd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((pass1plot*) G__getstructoffset())->get_hhmmss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((pass1plot*) G__getstructoffset())->get_usec());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->dump_dst_class((dstbank_class*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (FILE*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->dump_dst_class((dstbank_class*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->dump_dst_class((dstbank_class*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->events_to_dst_file((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->events_to_dst_file((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->events_to_dst_file((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->events_to_dst_file());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->init_md_plane_geom((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->init_md_plane_geom());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->get_md_pcgf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pass1plot*) G__getstructoffset())->get_xyz((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) pass1plot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) pass1plot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) pass1plot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      pass1plot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const pass1plot*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pass1plot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) pass1plot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) pass1plot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) pass1plot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pass1plotDict_862_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) pass1plot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__pass1plotDict_862_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pass1plot* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pass1plot(*(pass1plot*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pass1plotDictLN_pass1plot));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pass1plot G__Tpass1plot;
static int G__pass1plotDict_862_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pass1plot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pass1plot*) (soff+(sizeof(pass1plot)*i)))->~G__Tpass1plot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pass1plot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pass1plot*) (soff))->~G__Tpass1plot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* md_pcgf_class */

/* pass1plot */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncpass1plotDict {
 public:
  G__Sizep2memfuncpass1plotDict(): p(&G__Sizep2memfuncpass1plotDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncpass1plotDict::*p)();
};

size_t G__get_sizep2memfuncpass1plotDict()
{
  G__Sizep2memfuncpass1plotDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancepass1plotDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablepass1plotDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__pass1plotDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__pass1plotDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__pass1plotDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__pass1plotDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__pass1plotDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__pass1plotDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__pass1plotDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__pass1plotDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__pass1plotDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__pass1plotDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__pass1plotDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__pass1plotDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__pass1plotDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Int_t> >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<Int_t> > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Double_t> >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<Double_t> > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Short_t>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEshortcOallocatorlEshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Short_t> >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<short,allocator<short> > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<Short_t> > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Char_t>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEcharcOallocatorlEchargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SDEventSubData_class>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDEventSubData_classcOallocatorlESDEventSubData_classgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDEventSubData_classcOallocatorlESDEventSubData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDEventSubData_classcOallocatorlESDEventSubData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDEventSubData_classcOallocatorlESDEventSubData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDEventSubData_classcOallocatorlESDEventSubData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Float_t> >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SDCalibHostData_class>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibHostData_classcOallocatorlESDCalibHostData_classgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibHostData_classcOallocatorlESDCalibHostData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibHostData_classcOallocatorlESDCalibHostData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibHostData_classcOallocatorlESDCalibHostData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibHostData_classcOallocatorlESDCalibHostData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SDCalibSubData_class>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibSubData_classcOallocatorlESDCalibSubData_classgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibSubData_classcOallocatorlESDCalibSubData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibSubData_classcOallocatorlESDCalibSubData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibSubData_classcOallocatorlESDCalibSubData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibSubData_classcOallocatorlESDCalibSubData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SDCalibWeatherData_class>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibWeatherData_classcOallocatorlESDCalibWeatherData_classgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibWeatherData_classcOallocatorlESDCalibWeatherData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibWeatherData_classcOallocatorlESDCalibWeatherData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibWeatherData_classcOallocatorlESDCalibWeatherData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibWeatherData_classcOallocatorlESDCalibWeatherData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SDCalibevData_class>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibevData_classcOallocatorlESDCalibevData_classgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibevData_classcOallocatorlESDCalibevData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibevData_classcOallocatorlESDCalibevData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibevData_classcOallocatorlESDCalibevData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibevData_classcOallocatorlESDCalibevData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SDCalibevWeatherData_class>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibevWeatherData_classcOallocatorlESDCalibevWeatherData_classgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibevWeatherData_classcOallocatorlESDCalibevWeatherData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibevWeatherData_classcOallocatorlESDCalibevWeatherData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibevWeatherData_classcOallocatorlESDCalibevWeatherData_classgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlESDCalibevWeatherData_classcOallocatorlESDCalibevWeatherData_classgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<UShort_t> >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned short,allocator<unsigned short> > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<UShort_t> > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > >",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Byte_t>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<sdpos>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<sdxyzclf_class::sdpos>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dstbank_class**>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pass1plotDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* md_pcgf_class */
static void G__setup_memvarmd_pcgf_class(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pass1plotDictLN_md_pcgf_class));
   { md_pcgf_class *p; p=(md_pcgf_class*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->imin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"imin[3]=",0,"the minimum chi-squares of combined, profile, and timing");
   G__memvar_setup((void*)((long)(&p->igfit)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"igfit[16]=",0,"determination of a good fit (fit good)");
   G__memvar_setup((void*)((long)(&p->ig)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ig=",0,"determination of a good fit (at least one mirror)");
   G__memvar_setup((void*)((long)(&p->avgcfc)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"avgcfc[16]=",0,"determination of a good fit (avg. correction fact.)");
   G__memvar_setup((void*)((long)(&p->ndft_fit)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ndft_fit[16]=",0,"# degrees of freedom in timing fit");
   G__memvar_setup((void*)((long)(&p->tot_npe)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tot_npe=",0,"total number of npe's for the event");
   G__memvar_setup((void*)((long)(&p->nbins)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nbins=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ng)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ng=",0,"counters: avgcfc, ndft");
   G__memvar_setup((void*)((long)(&p->sum)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"sum=",0,"adders: avgcfc");
   G__memvar_setup((void*)((long)(&p->FIT_START)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"FIT_START=",0,"where the constrained profile fits start in the utafd DST banks");
   G__memvar_setup((void*)((long)(&p->c2c)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"c2c=",0,"best combined profile and time fit chi2");
   G__memvar_setup((void*)((long)(&p->c2p)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"c2p=",0,"best chi2 of the profile fit");
   G__memvar_setup((void*)((long)(&p->c2t)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"c2t=",0,"best chi2 of the time fit");
   G__memvar_setup((void*)((long)(&p->ndfp)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ndfp=",0,"profile fit number of degrees of freedom");
   G__memvar_setup((void*)((long)(&p->ndft)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ndft=",0,"time fit number of degrees of freedom");
   G__memvar_setup((void*)((long)(&p->normp)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"normp=",0,"normalization factor for profile fit chi2");
   G__memvar_setup((void*)((long)(&p->normt)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"normt=",0,"normalization factor for time fit chi2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pass1plot */
static void G__setup_memvarpass1plot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pass1plotDictLN_pass1plot));
   { pass1plot *p; p=(pass1plot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->event_time_stamp)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TTimeStamp),-1,-1,1,"event_time_stamp=",0,"Time information of the event that's currently looked at");
   G__memvar_setup((void*)((long)(&p->MD_PMT_QE)-(long)(p)),100,0,1,-1,-1,-1,1,"MD_PMT_QE=",0,"MD PMT quantum efficiency");
   G__memvar_setup((void*)((long)(&p->pass1tree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TChain),-1,-1,1,"pass1tree=",0,"pass1 chain of trees");
   G__memvar_setup((void*)((long)(&p->talex00)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_talex00_class),-1,-1,1,"talex00=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_talex00)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_talex00=",0,"talex00 (pass0) variables from a tree");
   G__memvar_setup((void*)((long)(&p->rusdraw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_rusdraw_class),-1,-1,1,"rusdraw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_rusdraw)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_rusdraw=",0,"rusdraw (pass0) variables from a tree");
   G__memvar_setup((void*)((long)(&p->bsdinfo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_bsdinfo_class),-1,-1,1,"bsdinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_bsdinfo)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_bsdinfo=",0,"information on counters that didn't work correctly");
   G__memvar_setup((void*)((long)(&p->tasdcalibev)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_tasdcalibev_class),-1,-1,1,"tasdcalibev=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_tasdcalibev)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_tasdcalibev=",0,"ICRR calibrated event bank");
   G__memvar_setup((void*)((long)(&p->sdtrgbk)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_sdtrgbk_class),-1,-1,1,"sdtrgbk=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_sdtrgbk)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_sdtrgbk=",0,"SD trigger backup variables from a tree");
   G__memvar_setup((void*)((long)(&p->rusdmc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_rusdmc_class),-1,-1,1,"rusdmc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_rusdmc)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_rusdmc=",0,"Monte-Carlo variables");
   G__memvar_setup((void*)((long)(&p->rusdmc1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_rusdmc1_class),-1,-1,1,"rusdmc1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_rusdmc1)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_rusdmc1=",0,"Calculated Monte-Carlo variables");
   G__memvar_setup((void*)((long)(&p->rufptn)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_rufptn_class),-1,-1,1,"rufptn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_rufptn)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_rufptn=",0,"rufptn (pass1) variables from a tree");
   G__memvar_setup((void*)((long)(&p->rusdgeom)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_rusdgeom_class),-1,-1,1,"rusdgeom=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_rusdgeom)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_rusdgeom=",0,"rusdgeom (pass1) variables from a tree");
   G__memvar_setup((void*)((long)(&p->rufldf)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_rufldf_class),-1,-1,1,"rufldf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_rufldf)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_rufldf=",0,"pass2 variables from the root tree");
   G__memvar_setup((void*)((long)(&p->fdplane)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_fdplane_class),-1,-1,1,"fdplane=",0,"BR LR geometry generic for manipulation");
   G__memvar_setup((void*)((long)(&p->brplane)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_brplane_class),-1,-1,1,"brplane=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_brplane)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_brplane=",0,"BR FD geometry variables");
   G__memvar_setup((void*)((long)(&p->lrplane)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_lrplane_class),-1,-1,1,"lrplane=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_lrplane)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_lrplane=",0,"LR FD geometry variables");
   G__memvar_setup((void*)((long)(&p->fdprofile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_fdprofile_class),-1,-1,1,"fdprofile=",0,"BR LR FD profile generic (for manipulations)");
   G__memvar_setup((void*)((long)(&p->brprofile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_brprofile_class),-1,-1,1,"brprofile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_brprofile)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_brprofile=",0,"BR FD profile variables");
   G__memvar_setup((void*)((long)(&p->lrprofile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_lrprofile_class),-1,-1,1,"lrprofile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_lrprofile)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_lrprofile=",0,"LR FD profile variables");
   G__memvar_setup((void*)((long)(&p->hraw1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_hraw1_class),-1,-1,1,"hraw1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_hraw1)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_hraw1=",0,"MD raw");
   G__memvar_setup((void*)((long)(&p->mcraw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_mcraw_class),-1,-1,1,"mcraw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_mcraw)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_mcraw=",0,"MD mc raw");
   G__memvar_setup((void*)((long)(&p->mc04)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_mc04_class),-1,-1,1,"mc04=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_mc04)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_mc04=",0,"MD mc thrown");
   G__memvar_setup((void*)((long)(&p->hbar)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_hbar_class),-1,-1,1,"hbar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_hbar)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_hbar=",0,"MD calibration");
   G__memvar_setup((void*)((long)(&p->stps2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_stps2_class),-1,-1,1,"stps2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_stps2)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_stps2=",0,"MD pass2 class");
   G__memvar_setup((void*)((long)(&p->stpln)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_stpln_class),-1,-1,1,"stpln=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_stpln)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_stpln=",0,"MD plane fit");
   G__memvar_setup((void*)((long)(&p->hctim)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_hctim_class),-1,-1,1,"hctim=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_hctim)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_hctim=",0,"MD time fit");
   G__memvar_setup((void*)((long)(&p->hcbin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_hcbin_class),-1,-1,1,"hcbin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_hcbin)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_hcbin=",0,"MD profile fit bins");
   G__memvar_setup((void*)((long)(&p->prfc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_prfc_class),-1,-1,1,"prfc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->have_prfc)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_prfc=",0,"MD profile fit results");
   G__memvar_setup((void*)((long)(&p->haveMC)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"haveMC=",0,"Indicate the presence of both rusdmc and rusdmc1");
   G__memvar_setup((void*)((long)(&p->have_fdplane)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_fdplane[2]=",0,"Indicate the presence of fdplane branches   ( [0] BR, [1] LR )");
   G__memvar_setup((void*)((long)(&p->have_fdprofile)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"have_fdprofile[2]=",0,"Indicate the presence of fdprofile branches ( [0] BR, [1] LR )");
   G__memvar_setup((void*)((long)(&p->md_pcgf)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_md_pcgf_class),-1,-1,1,"md_pcgf=",0,"Not a branch but a class calculated from other branches. ");
   G__memvar_setup((void*)((long)(&p->eventsRead)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"eventsRead=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ngclust)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ngclust=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gclust)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"gclust[1024][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->laxisgclust)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"laxisgclust[1024][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->saxisgclust)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"saxisgclust[1024][3]=",0,"good cluster hits along the short axis");
   G__memvar_setup((void*)((long)(&p->relTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"relTime[1024][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeErr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"timeErr[1024][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"charge[1024][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargeErr)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"chargeErr[1024][3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tEarliest)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"tEarliest[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lcharge)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"lcharge[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->qtot)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"qtot[3]=",0,"Sum of all charge in the event (in space-time cluster)");
   G__memvar_setup((void*)((long)(&p->ngaps_plot)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ngaps_plot=",0,"count how many time gaps there are b/w adjacent fadc traces");
   G__memvar_setup((void*)((long)(&p->nfadcb)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nfadcb=",0,"number of fadc bins with gaps included");
   G__memvar_setup((void*)((long)(&p->gapsize_plot)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"gapsize_plot=",0,"record the sizes of the gaps b/w the adjacent waveforms in a multi-fold hit");
   G__memvar_setup((void*)((long)(&p->hErelTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hErelTime[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hCharge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hCharge[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hVEM)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hVEM[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPed)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hPed[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hFadcPed)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hFadcPed[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hfadc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hfadc[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hPhi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hPhi[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hTheta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hTheta[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hParea)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hParea[3]=",0,"pulse areas in ST-clusters");
   G__memvar_setup((void*)((long)(&p->hCoreDiffX)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hCoreDiffX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hCoreDiffY)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hCoreDiffY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hCoreDiffR)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hCoreDiffR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hDcoreR2vsRmin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hDcoreR2vsRmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pDcoreR2vsRmin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TProfile),-1,-1,1,"pDcoreR2vsRmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hDcoreRnoSat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hDcoreRnoSat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hDcoreRnoSatVsR)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hDcoreRnoSatVsR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pDcoreRnoSatVsR)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TProfile),-1,-1,1,"pDcoreRnoSatVsR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hTdSat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hTdSat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hTsSat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hTsSat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hTrSat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hTrSat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hNremVsRmin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hNremVsRmin=",0,"number of counters remaining by these cuts");
   G__memvar_setup((void*)((long)(&p->pNremVsRmin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TProfile),-1,-1,1,"pNremVsRmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hDcoreR2vsOneOverQmin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hDcoreR2vsOneOverQmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pDcoreR2vsOneOverQmin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TProfile),-1,-1,1,"pDcoreR2vsOneOverQmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hNremVsOneOverQmin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hNremVsOneOverQmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pNremVsOneOverQmin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TProfile),-1,-1,1,"pNremVsOneOverQmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hTdiff1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hTdiff1=",0,"Same counter hits");
   G__memvar_setup((void*)((long)(&p->hQVsdT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hQVsdT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hdQVsdT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hdQVsdT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hQrVsdT)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hQrVsdT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hTdiff2VsR)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hTdiff2VsR=",0,"Hits separated by 1200m vs distance from core");
   G__memvar_setup((void*)((long)(&p->hTdiff3VsR)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hTdiff3VsR=",0,"Hits separated by sqrt (2) * 1200m vs distance from core");
   G__memvar_setup((void*)((long)(&p->gTvsUall)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gTvsUall[3]=",0,"time vs dist. along long axis, for lower,upper, and both (all)");
   G__memvar_setup((void*)((long)(&p->gTvsUsclust)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gTvsUsclust[3]=",0,"time vs dist. along long axis, for lower,upper, and both (space clust)");
   G__memvar_setup((void*)((long)(&p->gTvsUclust)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gTvsUclust[3]=",0,"time vs dist. along long axis, for lower,upper, and both (clust)");
   G__memvar_setup((void*)((long)(&p->gTvsVall)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gTvsVall[3]=",0,"time vs dist. along short axis, for lower,upper, and both (all)");
   G__memvar_setup((void*)((long)(&p->gTvsVsclust)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gTvsVsclust[3]=",0,"time vs dist. along short axis, for lower,upper, and both (space clust)");
   G__memvar_setup((void*)((long)(&p->gTvsVclust)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gTvsVclust[3]=",0,"time vs dist. along short axis, for lower,upper, and both (clust)");
   G__memvar_setup((void*)((long)(&p->gQvsSall)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gQvsSall[3]=",0,"charge vs distance from shower axis graph (all)");
   G__memvar_setup((void*)((long)(&p->gQvsSsclust)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gQvsSsclust[3]=",0,"charge vs distance from shower axis graph (space clust)");
   G__memvar_setup((void*)((long)(&p->gQvsSclust)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gQvsSclust[3]=",0,"charge vs distance from shower axis graph (clust)");
   G__memvar_setup((void*)((long)(&p->gTvsRall)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gTvsRall[3]=",0,"time vs distance from the core graph (all)");
   G__memvar_setup((void*)((long)(&p->gTvsRsclust)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gTvsRsclust[3]=",0,"time vs distance from the core graph (space clust)");
   G__memvar_setup((void*)((long)(&p->gTvsRclust)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TGraphErrors),-1,-1,1,"gTvsRclust[3]=",0,"time vs distance from the core graph (clust)");
   G__memvar_setup((void*)((long)(&p->hQscat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hQscat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pQscat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TProfile),-1,-1,1,"pQscat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hQupQloRat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hQupQloRat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hQupQloRatScat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hQupQloRatScat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pQupQloRatScat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TProfile),-1,-1,1,"pQupQloRatScat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hTscat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH2F),-1,-1,1,"hTscat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pTscat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TProfile),-1,-1,1,"pTscat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hNfold)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hNfold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hQrat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hQrat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hLargePheight)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hLargePheight=",0,"Largest pulse height in FADC");
   G__memvar_setup((void*)((long)(&p->h1MIPResp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"h1MIPResp=",0,"FADC response to 1MIP signal");
   G__memvar_setup((void*)((long)(&p->muresp_shape)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"muresp_shape[12]=",0,"normalized so that the largest bin is 1");
   G__memvar_setup((void*)((long)(&p->hNpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hNpart[2]=",0,"# of particles vs time");
   G__memvar_setup((void*)((long)(&p->hNfadc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hNfadc[2]=",0,"fadc with pedestals subtracted");
   G__memvar_setup((void*)((long)(&p->hResp)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TH1F),-1,-1,1,"hResp[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sNpart)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TSpectrum),-1,-1,1,"sNpart=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isKosher)-(long)(p)),103,0,0,-1,-1,-1,1,"isKosher[3]=",0,"if event passes the geometry fits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TFile),-1,-1,4,"f=",0,"file that contains the tree");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"rusdraw2tasdcalibev[1024]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgR),G__defined_typename("vector<dstbank_class**>"),-1,4,"dst_branches=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"tree_names=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pass1plotDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarpass1plotDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncmd_pcgf_class(void) {
   /* md_pcgf_class */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pass1plotDictLN_md_pcgf_class));
   G__memfunc_setup("md_pcgf_class",1349,G__pass1plotDict_861_0_1, 105, G__get_linked_tagnum(&G__pass1plotDictLN_md_pcgf_class), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pass1plotDict_861_0_2, 85, G__get_linked_tagnum(&G__pass1plotDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&md_pcgf_class::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pass1plotDict_861_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&md_pcgf_class::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pass1plotDict_861_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&md_pcgf_class::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pass1plotDict_861_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&md_pcgf_class::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__pass1plotDict_861_0_6, 85, G__get_linked_tagnum(&G__pass1plotDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__pass1plotDict_861_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__pass1plotDict_861_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pass1plotDict_861_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pass1plotDict_861_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&md_pcgf_class::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pass1plotDict_861_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&md_pcgf_class::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pass1plotDict_861_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&md_pcgf_class::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pass1plotDict_861_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&md_pcgf_class::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("md_pcgf_class", 1349, G__pass1plotDict_861_0_14, (int) ('i'), G__get_linked_tagnum(&G__pass1plotDictLN_md_pcgf_class), -1, 0, 1, 1, 1, 0, "u 'md_pcgf_class' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~md_pcgf_class", 1475, G__pass1plotDict_861_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__pass1plotDict_861_0_16, (int) ('u'), G__get_linked_tagnum(&G__pass1plotDictLN_md_pcgf_class), -1, 1, 1, 1, 1, 0, "u 'md_pcgf_class' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpass1plot(void) {
   /* pass1plot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pass1plotDictLN_pass1plot));
   G__memfunc_setup("pass1plot",935,G__pass1plotDict_862_0_1, 105, G__get_linked_tagnum(&G__pass1plotDictLN_pass1plot), -1, 0, 1, 1, 1, 0, "C - - 10 - listfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__pass1plotDict_862_0_2, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 '0' entry i - 'Int_t' 0 '0' getall", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__pass1plotDict_862_0_3, 110, -1, G__defined_typename("Long64_t"), 0, 1, 1, 1, 0, "C - - 10 - sel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__pass1plotDict_862_0_4, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReadEvent",1182,G__pass1plotDict_862_0_5, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_event_time_stamp",2143,G__pass1plotDict_862_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'false' set_to_default_value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_hist",1081,G__pass1plotDict_862_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", "to histogram the FADC counters for", (void*) NULL, 0);
   G__memfunc_setup("get_sded_coordinates_from_gps",3061,G__pass1plotDict_862_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - lat_degree d - 'Double_t' 0 - lon_degree "
"d - 'Double_t' 0 - alt_meters D - 'Double_t' 0 - sded_x_1200m_units "
"D - 'Double_t' 0 - sded_y_1200m_units", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fadc_hist",933,G__pass1plotDict_862_0_9, 103, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' ihit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("npart_hist",1084,G__pass1plotDict_862_0_10, 103, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ihit", "to make histogram of # of particles as a function of time", (void*) NULL, 0);
   G__memfunc_setup("lookat",650,G__pass1plotDict_862_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' eventNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findCluster",1155,G__pass1plotDict_862_0_12, 103, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findCluster",1155,G__pass1plotDict_862_0_13, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - eNumber i - 'Int_t' 0 - nmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findTrig",823,G__pass1plotDict_862_0_14, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - trig_id i - 'Int_t' 0 - site", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findTrig",823,G__pass1plotDict_862_0_15, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - eNumber i - 'Int_t' 0 - trig_id "
"i - 'Int_t' 0 - site", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("svalue",656,G__pass1plotDict_862_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ihit", "find dist. from shower axis of ith hit counter", (void*) NULL, 0);
   G__memfunc_setup("xycoor",676,G__pass1plotDict_862_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - xxyy I - - 0 - xy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_sdenergy",1280,G__pass1plotDict_862_0_18, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - s800 d - 'Double_t' 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_sdenergy_iron",1815,G__pass1plotDict_862_0_19, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - - 0 - s800 d - - 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_event_surroundedness",2596,G__pass1plotDict_862_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("have_stdin",1061,G__pass1plotDict_862_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' poll_timeout_ms", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("continue_activity",1841,G__pass1plotDict_862_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '1.0' time_interval_seconds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Help",393,G__pass1plotDict_862_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_fdplane",1157,G__pass1plotDict_862_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - siteid g - 'Bool_t' 0 'true' chk_ntube "
"g - 'Bool_t' 0 'true' prinWarn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_fdprofile",1382,G__pass1plotDict_862_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - siteid g - 'Bool_t' 0 'true' chk_ntube "
"g - 'Bool_t' 0 'true' printWarn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_fd_tube_pd",1451,G__pass1plotDict_862_0_26, 103, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - fdsiteid i - - 0 - mir_num "
"i - - 0 - tube_num D - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_fd_time",1143,G__pass1plotDict_862_0_27, 103, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - fdsiteid i - - 0 - fdJday "
"i - - 0 - fdJsec I - - 0 - yymmdd "
"I - - 0 - hhmmss", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fdsite2clf",998,G__pass1plotDict_862_0_28, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - fdsiteid D - - 0 - xfd "
"D - - 0 - xclf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clf2fdsite",998,G__pass1plotDict_862_0_29, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - fdsiteid D - - 0 - xclf "
"D - - 0 - xfd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_hraw1",898,G__pass1plotDict_862_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tryCoreCalc",1115,G__pass1plotDict_862_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("recalcCore",1011,G__pass1plotDict_862_0_32, 103, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - qmax D - 'Double_t' 0 - coreXY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("recalcCore",1011,G__pass1plotDict_862_0_33, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - iexclude D - 'Double_t' 0 - coreXY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcNewCore",1094,G__pass1plotDict_862_0_34, 103, -1, -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - rmin d - 'Double_t' 0 - minOneOverQ "
"D - 'Double_t' 0 - oldCoreXY D - 'Double_t' 0 - newCoreXY "
"I - 'Int_t' 0 - nremoved", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("histDcore",933,G__pass1plotDict_862_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSaturated",1161,G__pass1plotDict_862_0_36, 103, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ihit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("histSat",736,G__pass1plotDict_862_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inSclust",853,G__pass1plotDict_862_0_38, 103, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - xxyy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("areSadjacent",1221,G__pass1plotDict_862_0_39, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ih1 i - 'Int_t' 0 - ih2 "
"D - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chk_precog",1045,G__pass1plotDict_862_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init_hist",971,G__pass1plotDict_862_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init_varbnum_hist",1829,G__pass1plotDict_862_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("analyze_Mf_hits",1565,G__pass1plotDict_862_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - fsclust", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("histSignal",1046,G__pass1plotDict_862_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_tasdcalibev_iwf",1990,G__pass1plotDict_862_0_45, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - rusdraw_iwf", "obtains tasdcalibev waveform index", (void*) NULL, 0);
   G__memfunc_setup("greg2jd",677,G__pass1plotDict_862_0_46, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - year i - - 0 - month "
"i - - 0 - day", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("jd2greg",677,G__pass1plotDict_862_0_47, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - julian I - - 0 - year "
"I - - 0 - month I - - 0 - day", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time_in_sec_j2000",1546,G__pass1plotDict_862_0_48, 105, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - year i - - 0 - month "
"i - - 0 - day i - - 0 - hour "
"i - - 0 - minute i - - 0 - second", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_sd_secfrac",1452,G__pass1plotDict_862_0_49, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_yymmdd",1075,G__pass1plotDict_862_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "return the date of the current event", (void*) NULL, 0);
   G__memfunc_setup("get_hhmmss",1071,G__pass1plotDict_862_0_51, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "return the time of the current event", (void*) NULL, 0);
   G__memfunc_setup("get_usec",847,G__pass1plotDict_862_0_52, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "return the second fraction of the current even", (void*) NULL, 0);
   G__memfunc_setup("dump_dst_class",1493,G__pass1plotDict_862_0_53, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'dstbank_class' - 0 - dstbank i - 'Int_t' 0 '0' format "
"E - - 0 'stdout' fp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("events_to_dst_file",1920,G__pass1plotDict_862_0_54, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' dst_file_name i - 'Int_t' 0 '0' imin "
"i - 'Int_t' 0 '0' imax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init_md_plane_geom",1882,G__pass1plotDict_862_0_55, 103, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' printWarning", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_md_pcgf",1135,G__pass1plotDict_862_0_56, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_xyz",778,G__pass1plotDict_862_0_57, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - yymmdd i - - 0 - xxyy "
"D - - 0 - xyz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chain_input_root_files",2343,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__pass1plotDictLN_TChain), -1, 0, 1, 1, 4, 0, "C - - 10 - listfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clean_event_hist",1691,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill_tasdcalibev_wf_indices",2818,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__pass1plotDict_862_0_61, 85, G__get_linked_tagnum(&G__pass1plotDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&pass1plot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pass1plotDict_862_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&pass1plot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pass1plotDict_862_0_63, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&pass1plot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pass1plotDict_862_0_64, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&pass1plot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__pass1plotDict_862_0_65, 85, G__get_linked_tagnum(&G__pass1plotDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__pass1plotDict_862_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__pass1plotDict_862_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pass1plotDict_862_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pass1plotDict_862_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&pass1plot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pass1plotDict_862_0_70, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&pass1plot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pass1plotDict_862_0_71, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&pass1plot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pass1plotDict_862_0_72, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&pass1plot::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("pass1plot", 935, G__pass1plotDict_862_0_73, (int) ('i'), G__get_linked_tagnum(&G__pass1plotDictLN_pass1plot), -1, 0, 1, 1, 1, 0, "u 'pass1plot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pass1plot", 1061, G__pass1plotDict_862_0_74, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncpass1plotDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalpass1plotDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcpass1plotDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__pass1plotDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEcharcOallocatorlEchargRsPgR = { "vector<char,allocator<char> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR = { "vector<unsigned char,allocator<unsigned char> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__pass1plotDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TSpectrum = { "TSpectrum" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_dstbank_class = { "dstbank_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_talex00_class = { "talex00_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >,allocator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > > >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >,allocator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_rusdraw_class = { "rusdraw_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_rusdmc_class = { "rusdmc_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_rusdmc1_class = { "rusdmc1_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_bsdinfo_class = { "bsdinfo_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_sdtrgbk_class = { "sdtrgbk_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR = { "vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >,allocator<vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > > > >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >,allocator<vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlESDEventSubData_classcOallocatorlESDEventSubData_classgRsPgR = { "vector<SDEventSubData_class,allocator<SDEventSubData_class> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlESDEventSubData_classcOallocatorlESDEventSubData_classgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<SDEventSubData_class,allocator<SDEventSubData_class> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlESDCalibHostData_classcOallocatorlESDCalibHostData_classgRsPgR = { "vector<SDCalibHostData_class,allocator<SDCalibHostData_class> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibHostData_classcOallocatorlESDCalibHostData_classgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<SDCalibHostData_class,allocator<SDCalibHostData_class> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlESDCalibSubData_classcOallocatorlESDCalibSubData_classgRsPgR = { "vector<SDCalibSubData_class,allocator<SDCalibSubData_class> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibSubData_classcOallocatorlESDCalibSubData_classgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<SDCalibSubData_class,allocator<SDCalibSubData_class> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlESDCalibWeatherData_classcOallocatorlESDCalibWeatherData_classgRsPgR = { "vector<SDCalibWeatherData_class,allocator<SDCalibWeatherData_class> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibWeatherData_classcOallocatorlESDCalibWeatherData_classgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<SDCalibWeatherData_class,allocator<SDCalibWeatherData_class> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_tasdcalibev_class = { "tasdcalibev_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlESDCalibevData_classcOallocatorlESDCalibevData_classgRsPgR = { "vector<SDCalibevData_class,allocator<SDCalibevData_class> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibevData_classcOallocatorlESDCalibevData_classgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<SDCalibevData_class,allocator<SDCalibevData_class> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlESDCalibevWeatherData_classcOallocatorlESDCalibevWeatherData_classgRsPgR = { "vector<SDCalibevWeatherData_class,allocator<SDCalibevWeatherData_class> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibevWeatherData_classcOallocatorlESDCalibevWeatherData_classgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<SDCalibevWeatherData_class,allocator<SDCalibevWeatherData_class> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_rufptn_class = { "rufptn_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_rusdgeom_class = { "rusdgeom_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_rufldf_class = { "rufldf_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR = { "vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >,allocator<vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > > >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > >,allocator<vector<vector<unsigned short,allocator<unsigned short> >,allocator<vector<unsigned short,allocator<unsigned short> > > > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_fdplane_class = { "fdplane_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_brplane_class = { "brplane_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_lrplane_class = { "lrplane_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_fdprofile_class = { "fdprofile_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_brprofile_class = { "brprofile_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_lrprofile_class = { "lrprofile_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_hbar_class = { "hbar_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_hraw1_class = { "hraw1_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_mc04_class = { "mc04_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_mcraw_class = { "mcraw_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_stps2_class = { "stps2_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_stpln_class = { "stpln_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_hctim_class = { "hctim_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_hcbin_class = { "hcbin_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_prfc_class = { "prfc_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgR = { "vector<sdxyzclf_class::sdpos,allocator<sdxyzclf_class::sdpos> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<sdxyzclf_class::sdpos,allocator<sdxyzclf_class::sdpos> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_TTimeStamp = { "TTimeStamp" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_md_pcgf_class = { "md_pcgf_class" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_pass1plot = { "pass1plot" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgR = { "vector<dstbank_class**,allocator<dstbank_class**> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dstbank_class**,allocator<dstbank_class**> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__pass1plotDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablepass1plotDict() {
  G__pass1plotDictLN_TClass.tagnum = -1 ;
  G__pass1plotDictLN_TBuffer.tagnum = -1 ;
  G__pass1plotDictLN_TMemberInspector.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEcharcOallocatorlEchargRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__pass1plotDictLN_TFile.tagnum = -1 ;
  G__pass1plotDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_TChain.tagnum = -1 ;
  G__pass1plotDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__pass1plotDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__pass1plotDictLN_TH1F.tagnum = -1 ;
  G__pass1plotDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__pass1plotDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__pass1plotDictLN_TProfile.tagnum = -1 ;
  G__pass1plotDictLN_TH2F.tagnum = -1 ;
  G__pass1plotDictLN_TSpectrum.tagnum = -1 ;
  G__pass1plotDictLN_TGraphErrors.tagnum = -1 ;
  G__pass1plotDictLN_dstbank_class.tagnum = -1 ;
  G__pass1plotDictLN_talex00_class.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_rusdraw_class.tagnum = -1 ;
  G__pass1plotDictLN_rusdmc_class.tagnum = -1 ;
  G__pass1plotDictLN_rusdmc1_class.tagnum = -1 ;
  G__pass1plotDictLN_bsdinfo_class.tagnum = -1 ;
  G__pass1plotDictLN_sdtrgbk_class.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlESDEventSubData_classcOallocatorlESDEventSubData_classgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlESDEventSubData_classcOallocatorlESDEventSubData_classgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlESDCalibHostData_classcOallocatorlESDCalibHostData_classgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibHostData_classcOallocatorlESDCalibHostData_classgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlESDCalibSubData_classcOallocatorlESDCalibSubData_classgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibSubData_classcOallocatorlESDCalibSubData_classgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlESDCalibWeatherData_classcOallocatorlESDCalibWeatherData_classgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibWeatherData_classcOallocatorlESDCalibWeatherData_classgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_tasdcalibev_class.tagnum = -1 ;
  G__pass1plotDictLN_vectorlESDCalibevData_classcOallocatorlESDCalibevData_classgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibevData_classcOallocatorlESDCalibevData_classgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlESDCalibevWeatherData_classcOallocatorlESDCalibevWeatherData_classgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibevWeatherData_classcOallocatorlESDCalibevWeatherData_classgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_rufptn_class.tagnum = -1 ;
  G__pass1plotDictLN_rusdgeom_class.tagnum = -1 ;
  G__pass1plotDictLN_rufldf_class.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_fdplane_class.tagnum = -1 ;
  G__pass1plotDictLN_brplane_class.tagnum = -1 ;
  G__pass1plotDictLN_lrplane_class.tagnum = -1 ;
  G__pass1plotDictLN_fdprofile_class.tagnum = -1 ;
  G__pass1plotDictLN_brprofile_class.tagnum = -1 ;
  G__pass1plotDictLN_lrprofile_class.tagnum = -1 ;
  G__pass1plotDictLN_hbar_class.tagnum = -1 ;
  G__pass1plotDictLN_hraw1_class.tagnum = -1 ;
  G__pass1plotDictLN_mc04_class.tagnum = -1 ;
  G__pass1plotDictLN_mcraw_class.tagnum = -1 ;
  G__pass1plotDictLN_stps2_class.tagnum = -1 ;
  G__pass1plotDictLN_stpln_class.tagnum = -1 ;
  G__pass1plotDictLN_hctim_class.tagnum = -1 ;
  G__pass1plotDictLN_hcbin_class.tagnum = -1 ;
  G__pass1plotDictLN_prfc_class.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_TTimeStamp.tagnum = -1 ;
  G__pass1plotDictLN_md_pcgf_class.tagnum = -1 ;
  G__pass1plotDictLN_pass1plot.tagnum = -1 ;
  G__pass1plotDictLN_vectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pass1plotDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__pass1plotDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablepass1plotDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEcharcOallocatorlEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TChain);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TProfile);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TSpectrum);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TGraphErrors);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_dstbank_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_talex00_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_rusdraw_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_rusdmc_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_rusdmc1_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_bsdinfo_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_sdtrgbk_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlESDEventSubData_classcOallocatorlESDEventSubData_classgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDEventSubData_classcOallocatorlESDEventSubData_classgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlESDCalibHostData_classcOallocatorlESDCalibHostData_classgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibHostData_classcOallocatorlESDCalibHostData_classgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlESDCalibSubData_classcOallocatorlESDCalibSubData_classgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibSubData_classcOallocatorlESDCalibSubData_classgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlESDCalibWeatherData_classcOallocatorlESDCalibWeatherData_classgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibWeatherData_classcOallocatorlESDCalibWeatherData_classgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_tasdcalibev_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlESDCalibevData_classcOallocatorlESDCalibevData_classgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibevData_classcOallocatorlESDCalibevData_classgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlESDCalibevWeatherData_classcOallocatorlESDCalibevWeatherData_classgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlESDCalibevWeatherData_classcOallocatorlESDCalibevWeatherData_classgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_rufptn_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_rusdgeom_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_rufldf_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOallocatorlEvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_fdplane_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_brplane_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_lrplane_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_fdprofile_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_brprofile_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_lrprofile_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_hbar_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_hraw1_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_mc04_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_mcraw_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_stps2_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_stpln_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_hctim_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_hcbin_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_prfc_class);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEsdxyzclf_classcLcLsdposcOallocatorlEsdxyzclf_classcLcLsdposgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_TTimeStamp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pass1plotDictLN_md_pcgf_class),sizeof(md_pcgf_class),-1,1280,(char*)NULL,G__setup_memvarmd_pcgf_class,G__setup_memfuncmd_pcgf_class);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pass1plotDictLN_pass1plot),sizeof(pass1plot),-1,33792,(char*)NULL,G__setup_memvarpass1plot,G__setup_memfuncpass1plot);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlEdstbank_classmUmUcOallocatorlEdstbank_classmUmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__pass1plotDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setuppass1plotDict(void) {
  G__check_setup_version(30051515,"G__cpp_setuppass1plotDict()");
  G__set_cpp_environmentpass1plotDict();
  G__cpp_setup_tagtablepass1plotDict();

  G__cpp_setup_inheritancepass1plotDict();

  G__cpp_setup_typetablepass1plotDict();

  G__cpp_setup_memvarpass1plotDict();

  G__cpp_setup_memfuncpass1plotDict();
  G__cpp_setup_globalpass1plotDict();
  G__cpp_setup_funcpass1plotDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncpass1plotDict();
  return;
}
class G__cpp_setup_initpass1plotDict {
  public:
    G__cpp_setup_initpass1plotDict() { G__add_setup_func("pass1plotDict",(G__incsetup)(&G__cpp_setuppass1plotDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initpass1plotDict() { G__remove_setup_func("pass1plotDict"); }
};
G__cpp_setup_initpass1plotDict G__cpp_setup_initializerpass1plotDict;

